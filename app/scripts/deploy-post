#!/bin/bash
# Global cage stackscript - post-setup


# supervisor setup

cat > /etc/supervisor/conf.d/tornado-cage-app.conf<<EOF
[program:tornado-cage-app]
command=/home/webguy/web-apps/claw --runserver --port %(process_num)s
process_name=%(program_name)s-%(process_num)s               
numprocs=4
numprocs_start=9000
directory=/home/webguy/web-apps
user=webguy                                    
environment=CAGE_TEMPLATE=$CAGE_TEMPLATE
EOF

cp /etc/ssh/sshd_config /etc/ssh/sshd_config.bak
cat > /etc/ssh/sshd_config <<EOF
Port 22
Protocol 2
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_dsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
UsePrivilegeSeparation yes
KeyRegenerationInterval 3600
ServerKeyBits 768
SyslogFacility AUTH
LogLevel INFO
LoginGraceTime 120
PermitRootLogin no
StrictModes yes
RSAAuthentication yes
PubkeyAuthentication yes
IgnoreRhosts yes
RhostsRSAAuthentication no
HostbasedAuthentication no
PermitEmptyPasswords no
ChallengeResponseAuthentication no
PasswordAuthentication no
X11Forwarding yes
X11DisplayOffset 10
PrintMotd no
PrintLastLog yes
TCPKeepAlive yes
AcceptEnv LANG LC_*
Subsystem sftp /usr/lib/openssh/sftp-server
UsePAM yes
EOF

cat >/etc/nginx/sites-available/cage <<EOF
upstream cage  {
  server 127.0.0.1:9000; # cage application server
  server 127.0.0.1:9001;
  server 127.0.0.1:9002;
  server 127.0.0.1:9003;
}
 
server {
  listen       80;
  server_name  localhost;
  access_log  /var/log/nginx/$CLIENT_HOST.access.log;
  error_log  /var/log/nginx/$CLIENT_HOST.error.log;
  location / {
    proxy_pass  http://cage;
    include /etc/nginx/proxy.conf;
  }
}
EOF

cat >/etc/nginx/proxy.conf<<EOF
proxy_redirect          off;
proxy_set_header        Host            \$host;
proxy_set_header        X-Real-IP       \$remote_addr;
proxy_set_header        X-Forwarded-For \$proxy_add_x_forwarded_for;
client_max_body_size    50m; # user submitted upload max
client_body_buffer_size 128k;
proxy_connect_timeout   90;
proxy_send_timeout      90;
proxy_read_timeout      90;
proxy_buffers           32 4k;
EOF

# configure nginx
rm /etc/nginx/sites-enabled/default
ln -s /etc/nginx/sites-available/cage /etc/nginx/sites-enabled/cage

# disable ssh
# service ssh stop

# start other services
service nginx restart
service supervisor stop
service supervisor start

echo $CLIENT_HOST > /etc/hostname
hostname -F $CLIENT_HOST

cat>/etc/hosts<<EOF
127.0.0.1       localhost $CLIENT_HOST
127.0.1.1       ubuntu
EOF
